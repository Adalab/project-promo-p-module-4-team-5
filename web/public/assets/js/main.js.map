{"version":3,"sources":["_getAvatar.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"main.js","sourcesContent":["'use strict';\n\nconst fr = new FileReader();\nconst fileField = document.querySelector('.js__profile-upload-btn');\nconst profileImage = document.querySelector('.js__profile-image');\nconst profilePreview = document.querySelector('.js__profile-preview');\n\n/**\n * Recoge el archivo añadido al campo de tipo \"file\"\n * y lo carga en nuestro objeto FileReader para que\n * lo convierta a algo con lo que podamos trabajar.\n * Añade un listener al FR para que ejecute una función\n * al tener los datos listos\n * @param {evento} e\n */\nfunction getImage(e) {\n  const myFile = e.currentTarget.files[0];\n  fr.addEventListener('load', writeImage);\n  fr.readAsDataURL(myFile);\n}\n\n/**\n * Una vez tenemos los datos listos en el FR podemos\n * trabajar con ellos ;)\n */\nfunction writeImage() {\n  /* En la propiedad `result` de nuestro FR se almacena\n   * el resultado. Ese resultado de procesar el fichero que hemos cargado\n   * podemos pasarlo como background a la imagen de perfil y a la vista previa\n   * de nuestro componente.\n   */\n  profileImage.style.backgroundImage = `url(${fr.result})`;\n  profilePreview.style.backgroundImage = `url(${fr.result})`;\n  data.photo = fr.result;\n}\n\n/**\n * Genera un click automático en nuesto campo de tipo \"file\"\n * que está oculto\n */\nfunction fakeFileClick() {\n  fileField.click();\n}\n\n/**\n * Añadimos los listeners necesarios:\n * - al botón visible para generar el click automático\n * - al campo oculto para cuando cambie su value\n */\nfileField.addEventListener('change', getImage);\n","'use strict';\n\n//DESIGN DROP-DOWN\n//Constants\n\nfunction getElement(className) {\n  return document.querySelector(className);\n}\nconst shareBtn = getElement('.js-share-container');\nconst shareMsg = getElement('.js-share-article');\nconst designBox = getElement('.js-designBox');\nconst colourDropDown = getElement('.js-colour');\nconst designArrow = getElement('.js-designArrow');\nconst inputCircle1 = getElement('.js-inputColor1');\nconst inputCircle2 = getElement('.js-inputColor2');\nconst inputCircle3 = getElement('.js-inputColor3');\nconst cardProfile = getElement('.js-palette');\n// Constante formulario\nconst nameForm = getElement('.js__fillIn__name');\n// const nameForm = querySelector('.js__fillIn__name');\nconst form = getElement('.js_form');\nconst jobForm = getElement('.js__fillIn__job');\nconst nameProfile = getElement('.js__card__name');\nconst jobProfile = getElement('.js__card__job');\nconst emailProfile = getElement('.js_email');\nconst phoneProfile = getElement('.js_phone');\nconst linkedinProfile = getElement('.js_linkedin');\nconst githubProfile = getElement('.js_github');\nconst resetButton = getElement('.js__reset');\nconst formFieldsets = document.querySelectorAll('.js-form-fieldset');\nconst shareTwitterBtn = document.querySelector('.js_twitterShareBtn');\nconst URLCard = getElement('.js_URL');\nconst feedback = getElement('.js_message_error');\nlet data = {\n  name: '',\n  job: '',\n  email: '',\n  phone: '',\n  linkedin: '',\n  github: '',\n  palette: 1,\n  photo: '',\n};\nfunction modifyCardClasses(classAdd, classremove1, classremove2) {\n  cardProfile.classList.add(classAdd);\n  cardProfile.classList.remove(classremove1);\n  cardProfile.classList.remove(classremove2);\n}\n\nconsole.log('>> Ready :)');\n\nfunction collapseFieldsetsExceptCurrent(event) {\n  formFieldsets.forEach((fieldset) => {\n    if (fieldset !== event.currentTarget.parentElement) {\n      fieldset.classList.add('collapsed');\n    }\n  });\n  if (shareBtn.classList.contains('white')) {\n    shareBtn.classList.remove('white');\n    feedback.innerHTML = '';\n  }\n}\n\nfor (const fieldset of formFieldsets) {\n  const title = fieldset.querySelector('.js-form-title');\n\n  title.addEventListener('click', (event) => {\n    // Escondemos todos los fieldset menos el pulsado\n    collapseFieldsetsExceptCurrent(event);\n\n    // Mostramos/Escondemos el fieldset pulsado\n    fieldset.classList.toggle('collapsed');\n  });\n}\n\ninputCircle1.addEventListener('click', () => {\n  modifyCardClasses('palette3', 'palette2', 'palette1');\n  data.palette = 1;\n});\ninputCircle2.addEventListener('click', () => {\n  modifyCardClasses('palette2', 'palette3', 'palette1');\n  data.palette = 2;\n});\ninputCircle3.addEventListener('click', () => {\n  modifyCardClasses('palette1', 'palette3', 'palette2');\n  data.palette = 3;\n});\n\nfunction handleKeyup(event) {\n  const inputElement = event.target;\n  if (inputElement.name === 'name') {\n    data.name = inputElement.value;\n    nameProfile.innerHTML = data.name;\n    if (inputElement.value === '') {\n      nameProfile.innerHTML = 'Escribe tu nombre';\n    }\n  } else if (inputElement.name === 'job') {\n    jobProfile.innerHTML = data.job;\n    data.job = inputElement.value;\n    if (inputElement.value === '') {\n      jobProfile.innerHTML = 'Escribe tu profesion';\n    }\n  } else if (inputElement.name === 'email') {\n    data.email = inputElement.value;\n  } else if (inputElement.name === 'phone') {\n    data.phone = inputElement.value;\n  } else if (inputElement.name === 'linkedin') {\n    data.linkedin = inputElement.value;\n  } else if (inputElement.name === 'github') {\n    data.github = inputElement.value;\n  }\n\n  renderPreview();\n}\nresetButton.addEventListener('click', handleReset);\nfunction handleReset() {\n  console.log('click');\n  const profileImage = document.querySelector('.js__profile-image');\n  const profilePreview = document.querySelector('.js__profile-preview');\n  form.reset();\n\n  nameProfile.innerHTML = 'Nombre profile';\n  jobProfile.innerHTML = 'Front-end developer';\n  emailProfile.href = '';\n  linkedinProfile.href = '';\n  githubProfile.href = '';\n  modifyCardClasses('palette3', 'palette2', 'palette1');\n  // const srcImage = 'url(./assets/images/imagen-chica.png)';\n  profilePreview.style.backgroundImage = '';\n  profileImage.style.backgroundImage = 'url(./assets/images/imagen-chica.png)';\n  data = {\n    name: '',\n    job: '',\n    email: '',\n    phone: '',\n    linkedin: '',\n    github: '',\n    palette: 3,\n    photo: '',\n  };\n  return data;\n}\n\nfunction renderPreview() {\n  emailProfile.href = `mailto:${data.email}`;\n  linkedinProfile.href = `${data.linkedin}`;\n  githubProfile.href = `${data.github}`;\n  phoneProfile.href = `${data.phone}`;\n}\nform.addEventListener('keyup', handleKeyup);\n\nshareBtn.addEventListener('click', (event) => {\n  event.preventDefault();\n  shareBtn.classList.add('white');\n  shareMsg.classList.remove('hidden');\n});\n\n//  hacer fetch con POST y enviar el objeto (comprobar que sea igual)\n// coger el resultado que nos da la api\n// modificiarlo por el enlace de compartir\n// https://awesome-profile-cards.herokuapp.com/card/\n\nfunction createCard(event) {\n  event.preventDefault();\n  console.log(data);\n  if (\n    data.name !== '' &&\n    data.job !== '' &&\n    data.linkedin !== '' &&\n    data.github !== '' &&\n    data.photo !== '' &&\n    data.palette !== '' &&\n    data.email !== ''\n  ) {\n    feedback.innerHTML = '';\n    shareBtn.classList.remove('white');\n\n    fetch('https://awesome-profile-cards.herokuapp.com/card', {\n      method: 'POST', // enviar datos a la API\n      headers: { 'Content-Type': 'application/json' }, //tipo de dato\n      body: JSON.stringify(data), //datos que de quiero enviar, en este caso es data, pasandolo a string\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.success) {\n          feedback.innerHTML = 'Genial, la tarjeta ha sido creada!';\n          shareBtn.classList.add('white');\n          URLCard.innerHTML = result.cardURL;\n          URLCard.href = result.cardURL;\n          localStorage.setItem('data', JSON.stringify(data));\n        }\n      });\n    shareTwitterBtn.removeAttribute('disabled');\n  } else {\n    feedback.innerHTML = 'Falta algún dato en el formulario';\n  }\n}\n\nfunction shareOnTwitter(event) {\n  event.preventDefault();\n  console.log(URLCard.href);\n  let url = `https://twitter.com/intent/tweet?text=He%20creado%20una%20tarjeta%20profesional.%20Conóceme!%20&url=${URLCard.href}`;\n  window.location.href = url;\n}\n\nshareBtn.addEventListener('click', createCard);\nshareTwitterBtn.addEventListener('click', shareOnTwitter);\n\nfunction initApp() {\n  // cache crudo\n  const cacheRaw = localStorage.getItem('data');\n  // si el cache no es nulo pintame lo que hay en data\n  if (cacheRaw !== null) {\n    const cache = JSON.parse(cacheRaw);\n    data = cache;\n    nameProfile.innerHTML = data.name;\n    jobProfile.innerHTML = data.job;\n    emailProfile.href = `mailto:${data.email}`;\n    phoneProfile.href = `tel:${data.phone}`;\n    linkedinProfile.href = data.linkedin;\n    githubProfile.href = data.github;\n    profileImage.style.backgroundImage = `url(${data.photo})`;\n    profilePreview.style.backgroundImage = `url(${data.photo})`;\n  }\n}\ninitApp();\n"]}